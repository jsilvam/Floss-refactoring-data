"Number";"Commit";"Parent";"Refactoring";"EntityBefore";"EntityAfter";"FullDescription"
0;"5e13289812e3362e092974221080560af97fcc56";"5ddd1032a63eb109dcff15cf58f2f7ec025fd845";"Rename Method";"org.scribe.examples.GoogleExample.main(String[])";"org.scribe.examples.GoogleExample.setUp()";"Rename Method public main(args String[]) : void renamed to public setUp() : void in class org.scribe.examples.GoogleExample"
29;"b3d83739980aa214bd93ed6c1a6a7ce4a4ce4077";"045914d2c0b1a049509fd9ddcdc77efff075985a";"Extract Method";"org.scribe.services.HMACSha1SignatureService.doSign(String,String)";"org.scribe.services.HMACSha1SignatureService.bytesToBase64String(byte[])";"Extract Method private bytesToBase64String(bytes byte[]) : String extracted from private doSign(toSign String, keyString String) : String in class org.scribe.services.HMACSha1SignatureService"
29;"b3d83739980aa214bd93ed6c1a6a7ce4a4ce4077";"045914d2c0b1a049509fd9ddcdc77efff075985a";"Extract Method";"org.scribe.services.RSASha1SignatureService.getSignature(String,String,String)";"org.scribe.services.RSASha1SignatureService.bytesToBase64String(Signature)";"Extract Method private bytesToBase64String(signature Signature) : String extracted from public getSignature(baseString String, apiSecret String, tokenSecret String) : String in class org.scribe.services.RSASha1SignatureService"
42;"9a99a44c5f5a7e557f0a4bfa5d64a2587947b590";"b8ca4910f883dbc2759ba9ef494c591eb65e2521";"Extract Method";"org.scribe.model.Request.send()";"org.scribe.model.Request.send(RequestTuner)";"Extract Method public send(tuner RequestTuner) : Response extracted from public send() : Response in class org.scribe.model.Request"
42;"9a99a44c5f5a7e557f0a4bfa5d64a2587947b590";"b8ca4910f883dbc2759ba9ef494c591eb65e2521";"Extract Method";"org.scribe.oauth.OAuth10aServiceImpl.getAccessToken(Token,Verifier,int,TimeUnit)";"org.scribe.oauth.OAuth10aServiceImpl.getAccessToken(Token,Verifier,RequestTuner)";"Extract Method public getAccessToken(requestToken Token, verifier Verifier, tuner RequestTuner) : Token extracted from public getAccessToken(requestToken Token, verifier Verifier, timeout int, unit TimeUnit) : Token in class org.scribe.oauth.OAuth10aServiceImpl"
42;"9a99a44c5f5a7e557f0a4bfa5d64a2587947b590";"b8ca4910f883dbc2759ba9ef494c591eb65e2521";"Extract Method";"org.scribe.oauth.OAuth10aServiceImpl.getRequestToken(int,TimeUnit)";"org.scribe.oauth.OAuth10aServiceImpl.getRequestToken(RequestTuner)";"Extract Method public getRequestToken(tuner RequestTuner) : Token extracted from public getRequestToken(timeout int, unit TimeUnit) : Token in class org.scribe.oauth.OAuth10aServiceImpl"
45;"09d85d6713af6c97ae7d4450f88ceac20c60e2fd";"7b4fe73ba2b958627d838704ee6a706abd266301";"Extract Method";"org.scribe.oauth.OAuth10aServiceImpl.getAccessToken(Token,Verifier)";"org.scribe.oauth.OAuth10aServiceImpl.getAccessToken(Token,Verifier,int,TimeUnit)";"Extract Method public getAccessToken(requestToken Token, verifier Verifier, timeout int, unit TimeUnit) : Token extracted from public getAccessToken(requestToken Token, verifier Verifier) : Token in class org.scribe.oauth.OAuth10aServiceImpl"
45;"09d85d6713af6c97ae7d4450f88ceac20c60e2fd";"7b4fe73ba2b958627d838704ee6a706abd266301";"Extract Method";"org.scribe.oauth.OAuth10aServiceImpl.getRequestToken()";"org.scribe.oauth.OAuth10aServiceImpl.getRequestToken(int,TimeUnit)";"Extract Method public getRequestToken(timeout int, unit TimeUnit) : Token extracted from public getRequestToken() : Token in class org.scribe.oauth.OAuth10aServiceImpl"
86;"6cfdf973f8918e5e8d8874d57358dc6237efc2f0";"aa5e27b263b24efb5a4ee50b9d1cf22ee4f2ebee";"Rename Method";"org.scribe.builder.ServiceBuilderTest.shouldNotAcceptAnInvalidUrlAsCallback()";"org.scribe.builder.ServiceBuilderTest.shouldNotAcceptNullAsCallback()";"Rename Method public shouldNotAcceptAnInvalidUrlAsCallback() : void renamed to public shouldNotAcceptNullAsCallback() : void in class org.scribe.builder.ServiceBuilderTest"
89;"0a63f935d231eb50ba9db52c0735fbcb96e7589c";"61c0b4cc9f503f2774a7cf7ac31c4cd04edb2d2b";"Rename Method";"org.scribe.oauth.OAuth10aServiceImpl.addSignature(OAuthRequest)";"org.scribe.oauth.OAuth10aServiceImpl.appendSignature(OAuthRequest)";"Rename Method private addSignature(request OAuthRequest) : void renamed to private appendSignature(request OAuthRequest) : void in class org.scribe.oauth.OAuth10aServiceImpl"
92;"83b62f607993074867c0cffec6cdc0253f921628";"b380b3af3db142991df87e7b36d84d3f9041b07c";"Move Method";"org.scribe.utils.URLUtilsTest.shouldPercentEncodeCorrectlyTwitterCodingExamples()";"org.scribe.utils.OAuthEncoderTest.shouldPercentEncodeCorrectlyTwitterCodingExamples()";"Move Method public shouldPercentEncodeCorrectlyTwitterCodingExamples() : void from class org.scribe.utils.URLUtilsTest to public shouldPercentEncodeCorrectlyTwitterCodingExamples() : void from class org.scribe.utils.OAuthEncoderTest"
92;"83b62f607993074867c0cffec6cdc0253f921628";"b380b3af3db142991df87e7b36d84d3f9041b07c";"Move Method";"org.scribe.utils.URLUtilsTest.shouldNotPercentEncodeReservedCharacters()";"org.scribe.utils.OAuthEncoderTest.shouldNotPercentEncodeReservedCharacters()";"Move Method public shouldNotPercentEncodeReservedCharacters() : void from class org.scribe.utils.URLUtilsTest to public shouldNotPercentEncodeReservedCharacters() : void from class org.scribe.utils.OAuthEncoderTest"
92;"83b62f607993074867c0cffec6cdc0253f921628";"b380b3af3db142991df87e7b36d84d3f9041b07c";"Move Method";"org.scribe.utils.URLUtilsTest.shouldPercentEncodeAllSpecialCharacters()";"org.scribe.utils.OAuthEncoderTest.shouldPercentEncodeAllSpecialCharacters()";"Move Method public shouldPercentEncodeAllSpecialCharacters() : void from class org.scribe.utils.URLUtilsTest to public shouldPercentEncodeAllSpecialCharacters() : void from class org.scribe.utils.OAuthEncoderTest"
92;"83b62f607993074867c0cffec6cdc0253f921628";"b380b3af3db142991df87e7b36d84d3f9041b07c";"Move Method";"org.scribe.utils.URLUtilsTest.shouldThrowExceptionIfStringToEncodeIsNull()";"org.scribe.utils.OAuthEncoderTest.shouldThrowExceptionIfStringToEncodeIsNull()";"Move Method public shouldThrowExceptionIfStringToEncodeIsNull() : void from class org.scribe.utils.URLUtilsTest to public shouldThrowExceptionIfStringToEncodeIsNull() : void from class org.scribe.utils.OAuthEncoderTest"
92;"83b62f607993074867c0cffec6cdc0253f921628";"b380b3af3db142991df87e7b36d84d3f9041b07c";"Move Method";"org.scribe.utils.URLUtilsTest.shouldThrowExceptionIfStringToDecodeIsNull()";"org.scribe.utils.OAuthEncoderTest.shouldThrowExceptionIfStringToDecodeIsNull()";"Move Method public shouldThrowExceptionIfStringToDecodeIsNull() : void from class org.scribe.utils.URLUtilsTest to public shouldThrowExceptionIfStringToDecodeIsNull() : void from class org.scribe.utils.OAuthEncoderTest"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Move Method";"org.scribe.utils.URLUtilsTest.shouldAppendParametersToUrlWithQuerystring()";"org.scribe.model.ParameterListTest.shouldAppendParametersToUrlWithQuerystring()";"Move Method public shouldAppendParametersToUrlWithQuerystring() : void from class org.scribe.utils.URLUtilsTest to public shouldAppendParametersToUrlWithQuerystring() : void from class org.scribe.model.ParameterListTest"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Move Method";"org.scribe.utils.URLUtilsTest.shouldAppendParametersToSimpleUrl()";"org.scribe.model.ParameterListTest.shouldAppendParametersToSimpleUrl()";"Move Method public shouldAppendParametersToSimpleUrl() : void from class org.scribe.utils.URLUtilsTest to public shouldAppendParametersToSimpleUrl() : void from class org.scribe.model.ParameterListTest"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Extract Method";"org.scribe.utils.URLUtilsTest.shouldAppendParametersToSimpleUrl()";"org.scribe.model.ParameterList.add(String,String)";"Extract Method public add(key String, value String) : void extracted from public shouldAppendParametersToSimpleUrl() : void in class org.scribe.utils.URLUtilsTest"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Extract Method";"org.scribe.utils.URLUtilsTest.shouldAppendParametersToUrlWithQuerystring()";"org.scribe.model.ParameterList.add(String,String)";"Extract Method public add(key String, value String) : void extracted from public shouldAppendParametersToUrlWithQuerystring() : void in class org.scribe.utils.URLUtilsTest"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Extract Method";"org.scribe.extractors.BaseStringExtractorImpl.getSortedAndEncodedParams(OAuthRequest)";"org.scribe.model.ParameterList.addAll(ParameterList)";"Extract Method public addAll(other ParameterList) : void extracted from private getSortedAndEncodedParams(request OAuthRequest) : String in class org.scribe.extractors.BaseStringExtractorImpl"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Extract Method";"org.scribe.model.Request.getQueryStringParams()";"org.scribe.model.ParameterList.addAll(ParameterList)";"Extract Method public addAll(other ParameterList) : void extracted from public getQueryStringParams() : Map in class org.scribe.model.Request"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Extract Method";"org.scribe.model.RequestTest.shouldGetQueryStringParameters()";"org.scribe.model.ParameterList.size()";"Extract Method public size() : int extracted from public shouldGetQueryStringParameters() : void in class org.scribe.model.RequestTest"
94;"ce531cdc38b280abcc9b93930a228cbbc034d952";"56561acdac3923ed8b445752c1c231965250fad6";"Extract Method";"org.scribe.extractors.BaseStringExtractorImpl.getSortedAndEncodedParams(OAuthRequest)";"org.scribe.model.ParameterList.sort()";"Extract Method public sort() : void extracted from private getSortedAndEncodedParams(request OAuthRequest) : String in class org.scribe.extractors.BaseStringExtractorImpl"
101;"7510111d28b64bb90a6dab5c57bfcb99e04eed24";"852368e0a7cde9c88bca18c69d9ebe08f1f663d5";"Rename Method";"org.scribe.model.Response.wasSuccessful()";"org.scribe.model.Response.isSuccessful()";"Rename Method private wasSuccessful() : boolean renamed to public isSuccessful() : boolean in class org.scribe.model.Response"
110;"dcd13835ba12d5e1a86bf11a90989d73530132eb";"daf45d70784ca8380b99c26edc7d6a6676e8f3e4";"Move Method";"org.scribe.utils.URLUtils.concatSortedPercentEncodedParams(Map)";"org.scribe.utils.MapUtils.concatSortedPercentEncodedParams(Map)";"Move Method public concatSortedPercentEncodedParams(params Map) : String from class org.scribe.utils.URLUtils to public concatSortedPercentEncodedParams(params Map) : String from class org.scribe.utils.MapUtils"
110;"dcd13835ba12d5e1a86bf11a90989d73530132eb";"daf45d70784ca8380b99c26edc7d6a6676e8f3e4";"Move Method";"org.scribe.utils.URLUtils.queryStringToMap(String)";"org.scribe.utils.MapUtils.queryStringToMap(String)";"Move Method public queryStringToMap(queryString String) : Map from class org.scribe.utils.URLUtils to public queryStringToMap(queryString String) : Map from class org.scribe.utils.MapUtils"
125;"7b6b9056d36a0987df04df86f88715b40386a1e2";"ca7950004bf17251129b5bfad07df46d412a15a9";"Extract Method";"org.scribe.model.Request.getBodyContents()";"org.scribe.model.Request.getByteBodyContents()";"Extract Method package getByteBodyContents() : byte[] extracted from public getBodyContents() : String in class org.scribe.model.Request"
136;"109c93b4e4aa1d9e20b0344ad7286b8e7efd0e2c";"41b6da1a44f20f54235a7ce3c725bdcdd4091256";"Rename Method";"org.scribe.builder.api.DefaultApi10a.doCreateService(OAuthConfig)";"org.scribe.builder.api.DefaultApi10a.createService(OAuthConfig)";"Rename Method private doCreateService(config OAuthConfig) : OAuthService renamed to public createService(config OAuthConfig) : OAuthService in class org.scribe.builder.api.DefaultApi10a"
136;"109c93b4e4aa1d9e20b0344ad7286b8e7efd0e2c";"41b6da1a44f20f54235a7ce3c725bdcdd4091256";"Extract Method";"org.scribe.oauth.OAuth10aServiceImpl.addOAuthParams(OAuthRequest,Token)";"org.scribe.model.OAuthConfig.hasScope()";"Extract Method public hasScope() : boolean extracted from private addOAuthParams(request OAuthRequest, token Token) : void in class org.scribe.oauth.OAuth10aServiceImpl"
141;"8abdde928a2f9b0e5b49c77ee1743924d0e2db68";"193dcd2e25efcca804632119f9585346e31dc1a9";"Rename Method";"org.scribe.builder.ServiceBuilderTest.shouldReturnOOBasDefaultCallback()";"org.scribe.builder.ServiceBuilderTest.shouldReturnConfigDefaultValues()";"Rename Method public shouldReturnOOBasDefaultCallback() : void renamed to public shouldReturnConfigDefaultValues() : void in class org.scribe.builder.ServiceBuilderTest"
143;"931236561a0c8f88cfb98ee4d208875a789d8253";"5f40e0dca0684c9ab8f9bb5f0a5904156f529f99";"Rename Method";"org.scribe.oauth.OAuth10aServiceImpl.addOAuthHeader(OAuthRequest)";"org.scribe.oauth.OAuth10aServiceImpl.addSignature(OAuthRequest)";"Rename Method private addOAuthHeader(request OAuthRequest) : void renamed to private addSignature(request OAuthRequest) : void in class org.scribe.oauth.OAuth10aServiceImpl"
147;"db88d538076503691906bec2c1a1f56bd2eebf26";"cbfd88d749b0d9b4a994d9a4a5043be354c47f79";"Extract Method";"org.scribe.extractors.TokenExtractorImpl.extract(String)";"org.scribe.extractors.TokenExtractorImpl.extract(String,Pattern)";"Extract Method private extract(response String, p Pattern) : String extracted from public extract(response String) : Token in class org.scribe.extractors.TokenExtractorImpl"
160;"73a53b363a04cc0835f7e83450d42695e5c17f2d";"16b347592676c3f7f1134c4498376cae60e953e7";"Rename Method";"org.scribe.model.RequestTest.shouldSetBodyParamsAndHeaders()";"org.scribe.model.RequestTest.shouldSetBodyParamsAndAddContentLength()";"Rename Method public shouldSetBodyParamsAndHeaders() : void renamed to public shouldSetBodyParamsAndAddContentLength() : void in class org.scribe.model.RequestTest"
162;"22367de55341d6045fc058e60bd88c21426ed235";"906a979e635b5713842338e3f1cc6248d5cb09ef";"Extract Method";"org.scribe.model.Request.getQueryStringParams()";"org.scribe.utils.URLUtils.queryStringToMap(String)";"Extract Method public queryStringToMap(queryString String) : Map extracted from public getQueryStringParams() : Map in class org.scribe.model.Request"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Rename Method";"org.scribe.utils.URLUtils.percentDecode(String)";"org.scribe.utils.URLUtils.formURLDecode(String)";"Rename Method public percentDecode(string String) : String renamed to public formURLDecode(string String) : String in class org.scribe.utils.URLUtils"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Rename Method";"org.scribe.utils.URLUtilsTest.shouldEncodePlusSymbol()";"org.scribe.utils.URLUtilsTest.shouldPercentEncodePlusSymbol()";"Rename Method public shouldEncodePlusSymbol() : void renamed to public shouldPercentEncodePlusSymbol() : void in class org.scribe.utils.URLUtilsTest"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Rename Method";"org.scribe.utils.URLUtilsTest.shouldNotEncodeReservedCharacters()";"org.scribe.utils.URLUtilsTest.shouldNotPercentEncodeReservedCharacters()";"Rename Method public shouldNotEncodeReservedCharacters() : void renamed to public shouldNotPercentEncodeReservedCharacters() : void in class org.scribe.utils.URLUtilsTest"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Rename Method";"org.scribe.utils.URLUtilsTest.shouldEncodeAllSpecialCharacters()";"org.scribe.utils.URLUtilsTest.shouldPercentEncodeAllSpecialCharacters()";"Rename Method public shouldEncodeAllSpecialCharacters() : void renamed to public shouldPercentEncodeAllSpecialCharacters() : void in class org.scribe.utils.URLUtilsTest"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Rename Method";"org.scribe.utils.URLUtilsTest.shouldDecodePlusSymbol()";"org.scribe.utils.URLUtilsTest.shouldURLDecodePlusSymbol()";"Rename Method public shouldDecodePlusSymbol() : void renamed to public shouldURLDecodePlusSymbol() : void in class org.scribe.utils.URLUtilsTest"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Rename Method";"org.scribe.utils.URLUtilsTest.shouldPercentDecodeString()";"org.scribe.utils.URLUtilsTest.shouldFormURLDecodeString()";"Rename Method public shouldPercentDecodeString() : void renamed to public shouldFormURLDecodeString() : void in class org.scribe.utils.URLUtilsTest"
166;"e0e8df98d36bcf65d231bd10e05c202cd9b9118f";"70358ad651a07116627e7dc37d9653fa9e04efac";"Extract Method";"org.scribe.utils.URLUtils.percentEncode(String)";"org.scribe.utils.URLUtils.formURLEncode(String)";"Extract Method public formURLEncode(string String) : String extracted from public percentEncode(string String) : String in class org.scribe.utils.URLUtils"
175;"40bb52537441c4e51dc9c40a4486ba5bc1bb33c5";"8e23e81c574f00490df77795697a67633a565837";"Rename Method";"org.scribe.model.Request.addQuerystringParam(String,String)";"org.scribe.model.Request.addQuerystringParameter(String,String)";"Rename Method public addQuerystringParam(key String, value String) : void renamed to public addQuerystringParameter(key String, value String) : void in class org.scribe.model.Request"
182;"088fc5e4431b4ad29c38d0a8ebf6314ef4d724e9";"27bac50073942634794c06bb228347743bc039f2";"Move Method";"org.scribe.oauth.OAuth2ServiceImpl.addScope(String)";"org.scribe.oauth.OAuth20ServiceImpl.addScope(String)";"Move Method public addScope(scope String) : void from class org.scribe.oauth.OAuth2ServiceImpl to public addScope(scope String) : void from class org.scribe.oauth.OAuth20ServiceImpl"
182;"088fc5e4431b4ad29c38d0a8ebf6314ef4d724e9";"27bac50073942634794c06bb228347743bc039f2";"Move Method";"org.scribe.oauth.OAuth2ServiceImpl.getAccessToken(Token,Verifier)";"org.scribe.oauth.OAuth20ServiceImpl.getAccessToken(Token,Verifier)";"Move Method public getAccessToken(requestToken Token, verifier Verifier) : Token from class org.scribe.oauth.OAuth2ServiceImpl to public getAccessToken(requestToken Token, verifier Verifier) : Token from class org.scribe.oauth.OAuth20ServiceImpl"
182;"088fc5e4431b4ad29c38d0a8ebf6314ef4d724e9";"27bac50073942634794c06bb228347743bc039f2";"Move Method";"org.scribe.oauth.OAuth2ServiceImpl.getRequestToken()";"org.scribe.oauth.OAuth20ServiceImpl.getRequestToken()";"Move Method public getRequestToken() : Token from class org.scribe.oauth.OAuth2ServiceImpl to public getRequestToken() : Token from class org.scribe.oauth.OAuth20ServiceImpl"
193;"41cbee06d7c7728abecaf2ee09ac2435a756c9ed";"8eb2062e9521539a66220aa276b62c9030facf08";"Rename Method";"org.scribe.builder.api.DefaultApi10a.createService(OAuthConfig)";"org.scribe.builder.api.DefaultApi10a.doCreateService(OAuthConfig)";"Rename Method private createService(config OAuthConfig) : OAuthService renamed to private doCreateService(config OAuthConfig) : OAuthService in class org.scribe.builder.api.DefaultApi10a"
194;"8eb2062e9521539a66220aa276b62c9030facf08";"8f0760664f270fae50a7a1cc3a217a4806d95adc";"Extract Method";"org.scribe.builder.api.DefaultApi10a.createService(String,String,String,String)";"org.scribe.builder.api.DefaultApi10a.createService(OAuthConfig)";"Extract Method private createService(config OAuthConfig) : OAuthService extracted from public createService(apiKey String, apiSecret String, callback String, scope String) : OAuthService in class org.scribe.builder.api.DefaultApi10a"
238;"8c8f26e13474e5f083bc22ea4ae4f64cd15f996e";"608f56d59f62c1c8aa81742713470168c629806c";"Inline Method";"org.scribe.extractors.HeaderExtractorImpl.addToHeader(StringBuffer,String,String)";"org.scribe.extractors.HeaderExtractorImpl.extract(OAuthRequest)";"Inline Method private addToHeader(header StringBuffer, name String, value String) : void inlined to public extract(request OAuthRequest) : String in class org.scribe.extractors.HeaderExtractorImpl"
238;"8c8f26e13474e5f083bc22ea4ae4f64cd15f996e";"608f56d59f62c1c8aa81742713470168c629806c";"Inline Method";"org.scribe.extractors.HeaderExtractorImpl.removeTrail(StringBuffer)";"org.scribe.extractors.HeaderExtractorImpl.extract(OAuthRequest)";"Inline Method private removeTrail(header StringBuffer) : String inlined to public extract(request OAuthRequest) : String in class org.scribe.extractors.HeaderExtractorImpl"
244;"fa8e93699532269afe24844f168e0f51b56a5294";"f55177995a86639066769a15f031c0921e30f999";"Move Class";"org.scribe.model.Request.Verb";"org.scribe.model.Verb";"Move Class org.scribe.model.Request.Verb moved to org.scribe.model.Verb"
252;"0a5b81779957dc23b052bd4b63d5292c890e394d";"9300baafef312635b54a8769ecd6541b72df46f0";"Move And Rename Class";"org.scribe.specs.YahooSpec";"org.scribe.examples.YahooExample";"Move And Rename Class org.scribe.specs.YahooSpec moved to org.scribe.examples.YahooExample"
252;"0a5b81779957dc23b052bd4b63d5292c890e394d";"9300baafef312635b54a8769ecd6541b72df46f0";"Move And Rename Class";"org.scribe.specs.TwitterSpec";"org.scribe.examples.TwitterExample";"Move And Rename Class org.scribe.specs.TwitterSpec moved to org.scribe.examples.TwitterExample"
252;"0a5b81779957dc23b052bd4b63d5292c890e394d";"9300baafef312635b54a8769ecd6541b72df46f0";"Move And Rename Class";"org.scribe.specs.LinkedInSpec";"org.scribe.examples.LinkedInExample";"Move And Rename Class org.scribe.specs.LinkedInSpec moved to org.scribe.examples.LinkedInExample"
